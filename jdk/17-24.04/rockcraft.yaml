name: jdk

base: bare
build-base: ubuntu@24.04

version: '17-24.04'
summary: Chiselled OpenJDK 17 on Ubuntu 24.04
description: |
  Chiselled OpenJDK 17 rock
platforms:
  amd64:
  arm64:

environment:
  JAVA_HOME: /usr/lib/jvm/java-17-openjdk-${CRAFT_ARCH_BUILD_FOR}

run-user: _daemon_

parts:
  openjdk:
    plugin: nil
    source:  https://github.com/vpa1977/chisel-releases
    source-branch: openjdk_awt_slices
    source-type: git
    build-environment:
      - DEVELOPMENT_ROCK_SLICES: |
          apt_apt-get \
          base-files_base \
          base-files_chisel \
          base-files_release-info \
          base-passwd_data \
          bash_bins \
          ca-certificates_data \
          coreutils_bins \
          debianutils_which \
          findutils_bins \
          grep_bins \
          gzip_bins \
          tar_bins \
          wget_bins \
          zstd_bins \
          debianutils_run-parts \
          libc-bin_getent \
    build-packages:
      - openjdk-17-jdk
    override-build: |
      # workaround missing libc-bin_getent slice required for working
      # apt-get install
      # https://github.com/canonical/chisel-releases/pull/684
      echo -e '  getent:\n    essential:\n      - libc6_libs\n    contents:\n      /usr/bin/getent:\n' >> ./slices/libc-bin.yaml
      chisel cut --release ./ --root ${CRAFT_PART_INSTALL}/ \
        ${DEVELOPMENT_ROCK_SLICES} \
        openjdk-17-jdk-headless_standard \
        openjdk-17-jdk-headless_modules \
        openjdk-17-jdk-headless_headers \
        openjdk-17-jdk-headless_debug-headers \
        openjdk-17-jre-headless_awt \
        ca-certificates-java_bins \
        base-files_chisel
      # workaround for missing /etc/profile.d in base-files_etc
      # https://github.com/canonical/chisel-releases/pull/684
      mkdir -p ${CRAFT_PART_INSTALL}/etc/profile.d
      mkdir -p ${CRAFT_PART_INSTALL}/etc/ssl/certs/java/
      cp /etc/ssl/certs/java/cacerts ${CRAFT_PART_INSTALL}/etc/ssl/certs/java/
      JAVA_HOME=usr/lib/jvm/java-17-openjdk-${CRAFT_ARCH_BUILD_FOR}
      cd ${CRAFT_PART_INSTALL}
      mkdir -p usr/bin
      for tool in `ls ${CRAFT_PART_INSTALL}/${JAVA_HOME}/bin`; do
        ln -s --relative ${JAVA_HOME}/bin/${tool} usr/bin/
      done
      craftctl default

  deb-security-manifest:
    plugin: make
    after:
      - openjdk
    source: https://github.com/canonical/rocks-security-manifest
    source-type: git
    source-branch: main
    override-prime: |
      gen_manifest
      craftctl default
